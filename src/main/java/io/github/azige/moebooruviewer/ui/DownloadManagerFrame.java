/*
 * Copyright (C) 2016 Azige
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package io.github.azige.moebooruviewer.ui;

import java.io.File;

import io.github.azige.moebooruviewer.Localization;
import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.ObjectFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author Azige
 */
@Component
public class DownloadManagerFrame extends javax.swing.JFrame implements DisposableBean {

    @Autowired
    private ObjectFactory<DownloadTaskPanel> downloadTaskPanelFactory;

    /**
     * Creates new form DownloadFrame
     */
    public DownloadManagerFrame(){
        initComponents();

        scrollPane.getVerticalScrollBar().setUnitIncrement(20);
        setLocationRelativeTo(null);
    }

    @Override
    public void destroy() throws Exception {
        dispose();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        taskContainerPanel = new javax.swing.JPanel();

        setTitle(Localization.getString("download_manager")); // NOI18N
        setMinimumSize(new java.awt.Dimension(412, 300));
        setResizable(false);

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        taskContainerPanel.setLayout(new javax.swing.BoxLayout(taskContainerPanel, javax.swing.BoxLayout.Y_AXIS));
        jPanel1.add(taskContainerPanel);

        scrollPane.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addDownloadTask(String url, File downloadFile) {
        DownloadTaskPanel taskPanel = downloadTaskPanelFactory.getObject();
        taskPanel.setUrl(url);
        taskPanel.setDownloadFile(downloadFile);
        taskContainerPanel.add(taskPanel);
        taskContainerPanel.revalidate();
        taskPanel.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JPanel taskContainerPanel;
    // End of variables declaration//GEN-END:variables
}
